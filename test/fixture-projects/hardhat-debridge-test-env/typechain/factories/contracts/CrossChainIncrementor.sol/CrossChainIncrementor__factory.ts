/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrossChainIncrementor,
  CrossChainIncrementorInterface,
} from "../../../contracts/CrossChainIncrementor.sol/CrossChainIncrementor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDeBridgeGateExtended",
        name: "deBridgeGate_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "crossChainCounterResidenceChainID_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossChainCounterResidenceAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deBridgeGate",
    outputs: [
      {
        internalType: "contract IDeBridgeGateExtended",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
    ],
    name: "increment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_amounts",
        type: "uint8[]",
      },
    ],
    name: "incrementMulti",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_executionFee",
        type: "uint256",
      },
    ],
    name: "incrementWithIncludedGas",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e5238038062000e5283398181016040528101906200003791906200010d565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200020e565b600081519050620000d981620001c0565b92915050565b600081519050620000f081620001da565b92915050565b6000815190506200010781620001f4565b92915050565b600080600060608486031215620001295762000128620001bb565b5b60006200013986828701620000df565b93505060206200014c86828701620000f6565b92505060406200015f86828701620000c8565b9150509250925092565b6000620001768262000191565b9050919050565b60006200018a8262000169565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b620001cb8162000169565b8114620001d757600080fd5b50565b620001e5816200017d565b8114620001f157600080fd5b50565b620001ff81620001b1565b81146200020b57600080fd5b50565b610c34806200021e6000396000f3fe6080604052600436106100435760003560e01c8063973897791461004f578063a78730a51461006b578063ca777fbf14610087578063d6b46330146100b25761004a565b3661004a57005b600080fd5b61006960048036038101906100649190610567565b6100ce565b005b6100856004803603810190610080919061060a565b610131565b005b34801561009357600080fd5b5061009c61014e565b6040516100a99190610875565b60405180910390f35b6100cc60048036038101906100c791906105dd565b610172565b005b60005b81518160ff16101561012d576000828260ff16815181106100f5576100f4610b3d565b5b60200260200101519050600061010b823361018f565b9050610118816000610211565b5050808061012590610ac0565b9150506100d1565b5050565b600061013d833361018f565b90506101498183610211565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061017e823361018f565b905061018b816000610211565b5050565b606063cca5afd460e01b83836040516024016101ac9291906108b2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b610219610462565b8181600001818152505061023481602001516002600161043a565b81602001818152505061024d816020015160018061043a565b8160200181815250508281606001819052503360405160200161027091906107c9565b604051602081830303815290604052816040018190525060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335087f0a6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156102f257600080fd5b505af1158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a91906105b0565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be29747684836103749190610959565b600086600154600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020016103ad91906107c9565b604051602081830303815290604052600160008a6040516020016103d19190610890565b6040516020818303038152906040526040518963ffffffff1660e01b815260040161040297969594939291906107e4565b6000604051808303818588803b15801561041b57600080fd5b505af115801561042f573d6000803e3d6000fd5b505050505050505050565b6000811561045057826001901b8417905061045b565b826001901b19841690505b9392505050565b6040518060800160405280600081526020016000815260200160608152602001606081525090565b600061049d61049884610900565b6108db565b905080838252602082019050828560208602820111156104c0576104bf610ba0565b5b60005b858110156104f057816104d68882610552565b8452602084019350602083019250506001810190506104c3565b5050509392505050565b600082601f83011261050f5761050e610b9b565b5b813561051f84826020860161048a565b91505092915050565b60008135905061053781610bd0565b92915050565b60008151905061054c81610bd0565b92915050565b60008135905061056181610be7565b92915050565b60006020828403121561057d5761057c610baa565b5b600082013567ffffffffffffffff81111561059b5761059a610ba5565b5b6105a7848285016104fa565b91505092915050565b6000602082840312156105c6576105c5610baa565b5b60006105d48482850161053d565b91505092915050565b6000602082840312156105f3576105f2610baa565b5b600061060184828501610552565b91505092915050565b6000806040838503121561062157610620610baa565b5b600061062f85828601610552565b925050602061064085828601610528565b9150509250929050565b610653816109af565b82525050565b61066a610665826109af565b610aea565b82525050565b610679816109c1565b82525050565b600061068a8261092c565b6106948185610937565b93506106a4818560208601610a5c565b6106ad81610baf565b840191505092915050565b60006106c38261092c565b6106cd8185610948565b93506106dd818560208601610a5c565b6106e681610baf565b840191505092915050565b6106fa81610a14565b82525050565b61070981610a26565b82525050565b600061071c600083610948565b915061072782610bcd565b600082019050919050565b600060808301600083015161074a600086018261079c565b50602083015161075d602086018261079c565b5060408301518482036040860152610775828261067f565b9150506060830151848203606086015261078f828261067f565b9150508091505092915050565b6107a5816109ed565b82525050565b6107b4816109ed565b82525050565b6107c381610a07565b82525050565b60006107d58284610659565b60148201915081905092915050565b6000610100820190506107fa600083018a61064a565b61080760208301896107ab565b61081460408301886107ab565b818103606083015261082681876106b8565b905081810360808301526108398161070f565b905061084860a0830186610670565b61085560c0830185610700565b81810360e083015261086781846106b8565b905098975050505050505050565b600060208201905061088a60008301846106f1565b92915050565b600060208201905081810360008301526108aa8184610732565b905092915050565b60006040820190506108c760008301856107ba565b6108d4602083018461064a565b9392505050565b60006108e56108f6565b90506108f18282610a8f565b919050565b6000604051905090565b600067ffffffffffffffff82111561091b5761091a610b6c565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610964826109ed565b915061096f836109ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a4576109a3610b0e565b5b828201905092915050565b60006109ba826109cd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000610a1f82610a38565b9050919050565b6000610a31826109f7565b9050919050565b6000610a4382610a4a565b9050919050565b6000610a55826109cd565b9050919050565b60005b83811015610a7a578082015181840152602081019050610a5f565b83811115610a89576000848401525b50505050565b610a9882610baf565b810181811067ffffffffffffffff82111715610ab757610ab6610b6c565b5b80604052505050565b6000610acb82610a07565b915060ff821415610adf57610ade610b0e565b5b600182019050919050565b6000610af582610afc565b9050919050565b6000610b0782610bc0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b50565b610bd9816109ed565b8114610be457600080fd5b50565b610bf081610a07565b8114610bfb57600080fd5b5056fea264697066735822122047a724d077469d0467b1c7e492cbe224c2b9455ff3df64cb41cd15cd69623c9e64736f6c63430008070033";

type CrossChainIncrementorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainIncrementorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainIncrementor__factory extends ContractFactory {
  constructor(...args: CrossChainIncrementorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    deBridgeGate_: PromiseOrValue<string>,
    crossChainCounterResidenceChainID_: PromiseOrValue<BigNumberish>,
    crossChainCounterResidenceAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainIncrementor> {
    return super.deploy(
      deBridgeGate_,
      crossChainCounterResidenceChainID_,
      crossChainCounterResidenceAddress_,
      overrides || {}
    ) as Promise<CrossChainIncrementor>;
  }
  override getDeployTransaction(
    deBridgeGate_: PromiseOrValue<string>,
    crossChainCounterResidenceChainID_: PromiseOrValue<BigNumberish>,
    crossChainCounterResidenceAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      deBridgeGate_,
      crossChainCounterResidenceChainID_,
      crossChainCounterResidenceAddress_,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainIncrementor {
    return super.attach(address) as CrossChainIncrementor;
  }
  override connect(signer: Signer): CrossChainIncrementor__factory {
    return super.connect(signer) as CrossChainIncrementor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainIncrementorInterface {
    return new utils.Interface(_abi) as CrossChainIncrementorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainIncrementor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainIncrementor;
  }
}
