/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Flags,
  FlagsInterface,
} from "../../../../../@debridge-finance/contracts/contracts/libraries/Flags";

const _abi = [
  {
    inputs: [],
    name: "MULTI_SEND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_WITH_SENDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_IF_EXTERNAL_FAIL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_EXTERNAL_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_HASHED_DATA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNWRAP_ETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60dc610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060655760003560e01c8063222f816714606a5780633b1805941460835780637b8332f914608a578063878174a9146091578063a8153758146098578063f3ff906314609f575b600080fd5b6071600381565b60405190815260200160405180910390f35b6071600081565b6071600181565b6071600281565b6071600581565b607160048156fea2646970667358221220ade98deb5fd3106d4e637b98a30ecfd2e2463fc4b483435d33371aa0c0d041f864736f6c63430008070033";

type FlagsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlagsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Flags__factory extends ContractFactory {
  constructor(...args: FlagsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Flags> {
    return super.deploy(overrides || {}) as Promise<Flags>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Flags {
    return super.attach(address) as Flags;
  }
  override connect(signer: Signer): Flags__factory {
    return super.connect(signer) as Flags__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlagsInterface {
    return new utils.Interface(_abi) as FlagsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flags {
    return new Contract(address, _abi, signerOrProvider) as Flags;
  }
}
